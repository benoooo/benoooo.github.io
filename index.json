[{"categories":null,"content":"Scrapy学习笔记 ","date":"2021-07-27","objectID":"/2021/07/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:0:0","tags":null,"title":"Scrapy学习笔记","uri":"/2021/07/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"模块 BeautifilSoup 元素提取器 Selenium 操纵浏览器 需要安装驱动 Scrapy 依赖库较多，报错可手动安装 https://www.lfd.uci.edu/~gohlke/pythonlibs/ Scrapy ","date":"2021-07-27","objectID":"/2021/07/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/:0:1","tags":null,"title":"Scrapy学习笔记","uri":"/2021/07/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"categories":["CentOS","documentation"],"content":"CentOS 8下搭建FTP站点环境","date":"2021-07-27","objectID":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/","tags":["CentOS"],"title":"搭建FTP站点（CentOS 8）","uri":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/"},{"categories":["CentOS","documentation"],"content":"搭建FTP站点（CentOS 8） 本页目录 背景信息 步骤一：安装vsftpd 步骤二：配置vsftpd 步骤三：设置安全组 步骤四：客户端测试 vsftp配置文件及参数说明 vsftpd（very secure FTP daemon）是Linux下的一款小巧轻快、安全易用的FTP服务器软件。本教程介绍如何在Linux实例上安装并配置vsftpd。 ","date":"2021-07-27","objectID":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/:0:0","tags":["CentOS"],"title":"搭建FTP站点（CentOS 8）","uri":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/"},{"categories":["CentOS","documentation"],"content":"背景信息 FTP（File Transfer Protocol）是一种文件传输协议，基于客户端/服务器架构，支持以下两种工作模式： 主动模式：客户端向FTP服务器发送端口信息，由服务器主动连接该端口。 被动模式：FTP服务器开启并发送端口信息给客户端，由客户端连接该端口，服务器被动接受连接。 说明 大多数FTP客户端都在局域网中，没有独立的公网IP地址，且有防火墙阻拦，主动模式下FTP服务器成功连接到客户端比较困难。因此，如无特殊需求，建议您将FTP服务器配置为被动模式。 FTP支持以下三种认证模式： 匿名用户模式：任何人无需密码验证就可以直接登录到FTP服务器。这种模式最不安全，一般只用来保存不重要的公开文件，不推荐在生产环境中使用。 本地用户模式：通过Linux系统本地账号进行验证的模式，相较于匿名用户模式更安全。 虚拟用户模式：FTP服务器的专有用户。虚拟用户只能访问Linux系统为其提供的FTP服务，而不能访问Linux系统的其它资源，进一步增强了FTP服务器的安全性。 本文主要介绍被动模式下，使用本地用户访问FTP服务器的配置方法。关于匿名模式的配置方式、第三方FTP客户端工具使用方式等介绍，请参见常见问题。 本教程示例步骤使用以下资源版本： 实例规格：ecs.g6.large 操作系统：CentOS 8.2 64位 vsftpd：3.0.3 当您使用不同软件版本时，可能需要根据实际情况调整命令和参数配置。 ","date":"2021-07-27","objectID":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/:1:0","tags":["CentOS"],"title":"搭建FTP站点（CentOS 8）","uri":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/"},{"categories":["CentOS","documentation"],"content":"步骤一：安装vsftpd 远程连接Linux实例。 远程连接的具体操作，请参见连接方式介绍。 运行以下命令安装vsftpd。 dnf install -y vsftpd 出现如下图所示界面时，表示安装成功。 运行以下命令设置FTP服务开机自启动。 systemctl enable vsftpd.service 运行以下命令启动FTP服务。 systemctl start vsftpd.service 说明 执行该命令时如果提示错误信息Job for vsftpd.service failed because the control process exited with error code，请排查是否存在下述问题。如果问题仍未解决，建议提交工单。 网络环境不支持IPv6时，运行命令vim /etc/vsftpd/vsftpd.conf将内容listen_ipv6=YES修改为listen_ipv6=NO。 MAC地址不匹配时，运行命令ifconfig查看MAC地址，并在/etc/sysconfig/network-scripts/ifcfg-xxx配置文件中新增或修改HWADDR=\u003cMAC地址\u003e。 运行以下命令查看FTP服务监听的端口。 netstat -antup | grep ftp 出现如下图所示界面，表示FTP服务已启动，监听的端口号为21。 此时，vsftpd默认已开启本地用户模式，您还需要继续进行配置才能正常使用FTP服务。 ","date":"2021-07-27","objectID":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/:2:0","tags":["CentOS"],"title":"搭建FTP站点（CentOS 8）","uri":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/"},{"categories":["CentOS","documentation"],"content":"步骤二：配置vsftpd 为保证数据安全，本文主要介绍被动模式下，使用本地用户访问FTP服务器的配置方法。 运行以下命令为FTP服务创建一个Linux用户。本示例中，该用户名为ftptest。 adduser ftptest 运行以下命令修改ftptest用户的密码。 passwd ftptest 运行命令后，根据命令行提示完成FTP用户的密码修改。 运行以下命令创建一个供FTP服务使用的文件目录。 mkdir /var/ftp/test 运行以下命令，创建测试文件。 该测试文件用于FTP客户端访问FTP服务器时使用。 touch /var/ftp/test/testfile.txt 运行以下命令更改/var/ftp/test目录的拥有者为ftptest。 chown -R ftptest:ftptest /var/ftp/test 修改vsftpd.conf配置文件。 运行以下命令，打开vsftpd的配置文件。 如果您在安装vsftpd时，使用的是apt install vsftpd安装命令，则配置文件路径为/etc/vsftpd.conf。 vim /etc/vsftpd/vsftpd.conf 按i进入编辑模式。 配置FTP服务器为被动模式。 具体的配置参数说明如下： 注意 修改和添加配置文件内的信息时，请注意格式问题。例如，添加多余的空格会造成无法重启服务的结果。 #除下面提及的参数，其他参数保持默认值即可。 #修改下列参数的值： #禁止匿名登录FTP服务器。 anonymous_enable=NO #允许本地用户登录FTP服务器。 local_enable=YES #监听IPv4 sockets。 listen=YES #在行首添加#注释掉以下参数： #关闭监听IPv6 sockets。 #listen_ipv6=YES #在配置文件的末尾添加下列参数： #设置本地用户登录后所在目录。 local_root=/var/ftp/test #全部用户被限制在主目录。 chroot_local_user=YES #启用例外用户名单。 chroot_list_enable=YES #指定例外用户列表文件，列表中用户不被锁定在主目录。 chroot_list_file=/etc/vsftpd/chroot_list #开启被动模式。 pasv_enable=YES allow_writeable_chroot=YES #本教程中为Linux实例的公网IP。 pasv_address=\u003cFTP服务器公网IP地址\u003e #设置被动模式下，建立数据传输可使用的端口范围的最小值。 #建议您把端口范围设置在一段比较高的范围内，例如50000~50010，有助于提高访问FTP服务器的安全性。 pasv_min_port=\u003cport number\u003e #设置被动模式下，建立数据传输可使用的端口范围的最大值。 pasv_max_port=\u003cport number\u003e 更多参数的详细信息，请参见vsftp配置文件及参数说明。 按Esc退出编辑模式，然后输入:wq并回车以保存并关闭文件。 创建chroot_list文件，并在文件中写入例外用户名单。 运行以下命令，创建chroot_list文件。 vim /etc/vsftpd/chroot_list 按i进入编辑模式。 输入例外用户名单。此名单中的用户不会被锁定在主目录，可以访问其他目录。 按Esc退出编辑模式，然后输入:wq并回车以保存并关闭文件。 注意 没有例外用户时，也必须创建chroot_list文件，内容可为空。 运行以下命令重启vsftpd服务。 systemctl restart vsftpd.service ","date":"2021-07-27","objectID":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/:3:0","tags":["CentOS"],"title":"搭建FTP站点（CentOS 8）","uri":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/"},{"categories":["CentOS","documentation"],"content":"步骤三：设置安全组 搭建好FTP站点后，在实例安全组的入方向添加规则并放行下列FTP端口。具体操作，请参见添加安全组规则。 说明 大多数客户端位于局域网中，IP地址是经过转换的，因此ipconfig或ifconfig命令返回的IP不一定是客户端的真实公网IP地址。若后续客户端无法登录FTP服务器，请重新确认其公网IP地址。 被动模式需开放21端口，以及配置文件/etc/vsftpd/vsftpd.conf中参数pasv_min_port和pasv_max_port之间的所有端口。配置详情如下表所示。 规则方向 授权策略 协议类型 端口范围 授权对象 入方向 允许 自定义TCP 21/21 所有要访问FTP服务器的客户端公网IP地址，多个地址之间用逗号隔开。允许所有客户端访问时，授权对象为0.0.0.0/0。 入方向 允许 自定义TCP pasv_min_port/pasv_max_port。例如：50000/50010 所有要访问FTP服务器的客户端公网IP地址，多个地址之间用逗号隔开。允许所有客户端访问时，授权对象为0.0.0.0/0。 ","date":"2021-07-27","objectID":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/:4:0","tags":["CentOS"],"title":"搭建FTP站点（CentOS 8）","uri":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/"},{"categories":["CentOS","documentation"],"content":"步骤四：客户端测试 FTP客户端、Windows命令行工具或浏览器均可用来测试FTP服务器。本文以Windows Server 2012 R2 64位系统的本地主机作为FTP客户端，介绍FTP服务器的访问步骤。 在本地主机，打开这台电脑。 在地址栏中输入ftp://\u003cFTP服务器公网IP地址\u003e:FTP端口，本文中为Linux实例的公网IP地址。例如：ftp://121.43.XX.XX:21 在弹出的登录身份对话框中，输入已设置的FTP用户名和密码，然后单击登录。 登录后，您可以查看到FTP服务器指定目录下的文件，例如：测试文件testfile.txt。 ","date":"2021-07-27","objectID":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/:5:0","tags":["CentOS"],"title":"搭建FTP站点（CentOS 8）","uri":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/"},{"categories":["CentOS","documentation"],"content":"vsftp配置文件及参数说明 /etc/vsftpd目录下文件说明如下： /etc/vsftpd/vsftpd.conf是vsftpd的核心配置文件。 /etc/vsftpd/ftpusers是黑名单文件，此文件中的用户不允许访问FTP服务器。 /etc/vsftpd/user_list是白名单文件，此文件中的用户允许访问FTP服务器。 配置文件vsftpd.conf参数说明如下： 用户登录控制参数说明如下表所示。 参数 说明 anonymous_enable=YES 接受匿名用户 no_anon_password=YES 匿名用户login时不询问口令 anon_root=（none） 匿名用户主目录 local_enable=YES 接受本地用户 local_root=（none） 本地用户主目录 用户权限控制参数说明如下表所示。 参数 说明 write_enable=YES 可以上传文件（全局控制） local_umask=022 本地用户上传的文件权限 file_open_mode=0666 上传文件的权限配合umask使用 anon_upload_enable=NO 匿名用户可以上传文件 anon_mkdir_write_enable=NO 匿名用户可以建目录 anon_other_write_enable=NO 匿名用户修改删除 chown_username=lightwiter 匿名上传文件所属用户名 ","date":"2021-07-27","objectID":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/:6:0","tags":["CentOS"],"title":"搭建FTP站点（CentOS 8）","uri":"/2021/07/%E6%90%AD%E5%BB%BAftp%E7%AB%99%E7%82%B9centos-8/"},{"categories":["CentOS"],"content":"部署LNMP环境（CentOS 8） 本页目录 [前提条件] [背景信息] [步骤一：准备编译环境] [步骤二：安装Nginx] [步骤三：安装MySQL] [步骤四：安装PHP] [步骤五：配置Nginx] [步骤六：配置MySQL] [步骤七：配置PHP] [步骤八：测试访问LNMP平台] [后续步骤] 本教程介绍如何手动在ECS实例上搭建LNMP环境（CentOS 8），其中LNMP分别代表Linux、Nginx、MySQL和PHP。 ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/:0:0","tags":["CentOS"],"title":"部署LNMP环境（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/"},{"categories":["CentOS"],"content":"前提条件 已创建ECS服务器实例并为实例分配公网IP地址。 已在实例安全组的入方向添加安全组规则并放行80端口。)。 ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/:1:0","tags":["CentOS"],"title":"部署LNMP环境（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/"},{"categories":["CentOS"],"content":"背景信息 CentOS 8版本的操作系统中默认安装了DNF软件包管理器，是YUM软件包管理器的下一代版本。您可以在CentOS 8系统中运行dnf命令获取相关的使用说明。 本教程适用于熟悉Linux操作系统。 操作系统及软件版本如下所示。当您使用不同软件版本时，可能需要根据实际情况调整命令和参数配置。 操作系统：CentOS 8.1 64位 Nginx版本：Nginx 1.16.1 MySQL版本：MySQL 8.0.17 PHP版本：PHP 7.3.5 ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/:2:0","tags":["CentOS"],"title":"部署LNMP环境（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/"},{"categories":["CentOS"],"content":"步骤一：准备编译环境 远程连接Linux实例。 关闭防火墙。 运行systemctl status firewalld命令查看当前防火墙的状态。 如果防火墙的状态参数是inactive，则防火墙为关闭状态。 如果防火墙的状态参数是active，则防火墙为开启状态。本示例中防火墙为开启状态，因此需要关闭防火墙。 关闭防火墙。如果防火墙为关闭状态可以忽略此步骤。 如果您想临时关闭防火墙，运行命令 systemctl stop firewalld 。 说明 这只是暂时关闭防火墙，下次重启Linux后，防火墙还会开启。 如果您想永久关闭防火墙，运行命令 systemctl disable firewalld 。 说明 如果您想重新开启防火墙，请参见firewalld官网信息。 关闭SELinux。 运行getenforce命令查看SELinux的当前状态。 如果SELinux状态参数是Disabled，则SELinux为关闭状态。 如果SELinux状态参数是Enforcing，则SELinux为开启状态。本示例中SELinux为开启状态，因此需要关闭SELinux。 关闭SELinux。如果SELinux为关闭状态可以忽略此步骤。 如果您想临时关闭SELinux，运行命令 setenforce 0 。 说明 这只是暂时关闭SELinux，下次重启Linux后，SELinux还会开启。 如果您想永久关闭SELinux，运行命令 vim /etc/selinux/config 编辑SELinux配置文件。回车后，把光标移动到 SELINUX=enforcing 这一行，按 i 键进入编辑模式，修改为 SELINUX=disabled ，按 Esc 键，然后输入 :wq 并按 Enter 键以保存并关闭SELinux配置文件。 说明 如果您想重新开启SELinux，请参见开启或关闭SELinux。 重启系统使设置生效。 ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/:3:0","tags":["CentOS"],"title":"部署LNMP环境（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/"},{"categories":["CentOS"],"content":"步骤二：安装Nginx 运行以下命令安装Nginx。 本教程将选用Nginx 1.16.1版本。 说明 您可以访问Nginx官方安装包获取适用于CentOS 8系统的多版本的Nginx安装包。 dnf -y install http://nginx.org/packages/centos/8/x86_64/RPMS/nginx-1.16.1-1.el8.ngx.x86_64.rpm 运行以下命令查看Nginx版本。 nginx -v 查看版本结果如下所示。 nginx version: nginx/1.16.1 ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/:4:0","tags":["CentOS"],"title":"部署LNMP环境（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/"},{"categories":["CentOS"],"content":"步骤三：安装MySQL 运行以下命令安装MySQL。 dnf -y install @mysql 运行以下命令查看MySQL版本。 mysql -V 查看版本结果如下所示。 mysql Ver 8.0.17 for Linux on x86_64 (Source distribution) ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/:5:0","tags":["CentOS"],"title":"部署LNMP环境（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/"},{"categories":["CentOS"],"content":"步骤四：安装PHP 运行以下命令添加并更新epel源。 dnf -y install epel-release dnf update epel-release 运行以下命令删除缓存的无用软件包并更新软件源。 dnf clean all dnf makecache 启用php:7.3模块。 说明 本示例使用php:7.3版本。如果您需要使用PHP 7.4版本，需要先安装remi源。remi源安装命令为dnf -y install https://rpms.remirepo.net/enterprise/remi-release-8.rpm。 dnf module enable php:7.3 运行以下命令安装PHP相应的模块。 dnf install php php-curl php-dom php-exif php-fileinfo php-fpm php-gd php-hash php-json php-mbstring php-mysqli php-openssl php-pcre php-xml libsodium 运行以下命令查看PHP版本。 php -v 查看版本结果如下所示。 PHP 7.3.5 (cli) (built: Apr 30 2019 08:37:17) ( NTS ) Copyright (c) 1997-2018 The PHP Group Zend Engine v3.3.5, Copyright (c) 1998-2018 Zend Technologies ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/:6:0","tags":["CentOS"],"title":"部署LNMP环境（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/"},{"categories":["CentOS"],"content":"步骤五：配置Nginx 运行以下命令查看Nginx配置文件的默认路径。 cat /etc/nginx/nginx.conf 在http大括号内，查看include配置项。即配置文件的默认路径。 在配置文件的默认路径下，备份默认配置文件。 cd /etc/nginx/conf.d cp default.conf default.conf.bak 修改默认配置文件。 运行以下命令打开默认配置文件。 vi default.conf 按i进入编辑模式。 在location大括号内，修改以下内容。 location / { #将该路径替换为您的网站根目录。 root /usr/share/nginx/html; #添加默认首页信息index.php。 index index.html index.htm index.php; } 去掉被注释的location ~ \\.php$大括号内容前的#，并修改大括号的内容。 修改完成如下所示。 location ~ \\.php$ { #将该路径替换为您的网站根目录。 root /usr/share/nginx/html; #Nginx通过unix套接字与PHP-FPM建立联系，该配置与/etc/php-fpm.d/www.conf文件内的listen配置一致。 fastcgi_pass unix:/run/php-fpm/www.sock; fastcgi_index index.php; #将/scripts$fastcgi_script_name修改为$document_root$fastcgi_script_name。 fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; #Nginx调用fastcgi接口处理PHP请求。 include fastcgi_params; } 说明 Nginx与PHP-FPM进程间通信方式有两种。 TCP Socket：该方式能够通过网络，可用于跨服务器通信的场景。 UNIX Domain Socket：该方式不能通过网络，只能用于同一服务器中通信的场景。 按下Esc键，并输入:wq保存退出文件。 运行以下命令启动Nginx服务。 systemctl start nginx 运行以下命令设置Nginx服务开机自启动。 systemctl enable nginx ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/:7:0","tags":["CentOS"],"title":"部署LNMP环境（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/"},{"categories":["CentOS"],"content":"步骤六：配置MySQL 运行以下命令启动MySQL，并设置为开机自启动。 systemctl enable --now mysqld 运行以下命令查看MySQL是否已启动。 systemctl status mysqld 查看返回结果中Active: active (running)表示已启动。 运行以下命令执行MySQL安全性操作并设置密码。 mysql_secure_installation 命令运行后，根据命令行提示执行如下操作。 输入Y并回车开始相关配置。 选择密码验证策略强度，输入 2 并回车。 策略0表示低，1表示中，2表示高。建议您选择高强度的密码验证策略。 设置MySQL的新密码并确认。 本示例设置密码PASSword123！。 输入Y并回车继续使用提供的密码。 输入Y并回车移除匿名用户。 设置是否允许远程连接MySQL。 不需要远程连接时，输入Y并回车。 需要远程连接时，输入N或其他任意非Y的按键，并回车。 输入Y并回车删除test库以及对test库的访问权限。 输入Y并回车重新加载授权表。 ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/:8:0","tags":["CentOS"],"title":"部署LNMP环境（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/"},{"categories":["CentOS"],"content":"步骤七：配置PHP 修改PHP配置文件。 运行以下命令打开配置文件。 vi /etc/php-fpm.d/www.conf 按i进入编辑模式。 找到user = apache和group = apache，将apache修改为nginx。 按下Esc键，并输入:wq保存退出文件。 新建phpinfo.php文件，用于展示PHP信息。 运行以下命令新建文件。 vim \u003c网站根目录\u003e/phpinfo.php #将\u003c网站根目录\u003e替换为您配置的网站根目录。 网站根目录是您在nginx.conf文件中location ~ .php$大括号内配置的root值，如下图所示。 本教程配置的网站根目录为/usr/share/nginx/html，因此命令为： vim /usr/share/nginx/html/phpinfo.php 按i进入编辑模式。 输入下列内容，函数phpinfo()会展示PHP的所有配置信息。 \u003c?php echo phpinfo(); ?\u003e 按Esc键后，输入:wq并回车以保存并关闭配置文件。 运行以下命令启动PHP-FPM。 systemctl start php-fpm 运行以下命令设置PHP-FPM开机自启动。 systemctl enable php-fpm ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/:9:0","tags":["CentOS"],"title":"部署LNMP环境（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/"},{"categories":["CentOS"],"content":"步骤八：测试访问LNMP平台 在本地物理机打开浏览器。 在地址栏输入http://\u003cECS实例公网IP地址\u003e/phpinfo.php。 返回结果如下图所示，表示LNMP环境部署成功。 ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/:10:0","tags":["CentOS"],"title":"部署LNMP环境（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/"},{"categories":["CentOS"],"content":"后续步骤 测试访问LNMP平台成功后，建议您运行以下命令将phpinfo.php文件删除，消除安全隐患。 rm -rf \u003c网站根目录\u003e/phpinfo.php #将\u003c网站根目录\u003e替换为您在nginx.conf中配置的网站根目录 本教程配置的网站根目录为/usr/share/nginx/html，因此命令为： rm -rf /usr/share/nginx/html/phpinfo.php ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/:11:0","tags":["CentOS"],"title":"部署LNMP环境（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83centos-8/"},{"categories":["CentOS"],"content":"部署并使用Docker（CentOS 8） 本页目录 前提条件 背景信息 部署Docker 使用Docker 制作Docker镜像 本文介绍如何在CentOS 8.1 64位操作系统的ECS实例上部署并使用Docker。适用于熟悉Linux操作系统，刚开始使用阿里云ECS的开发者。 ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2%E5%B9%B6%E4%BD%BF%E7%94%A8dockercentos-8/:0:0","tags":["CentOS"],"title":"部署并使用Docker（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2%E5%B9%B6%E4%BD%BF%E7%94%A8dockercentos-8/"},{"categories":["CentOS"],"content":"前提条件 本教程示例步骤选用以下ECS实例配置： 实例规格：ecs.g6.large 操作系统：CentOS 8.1 64位 网络类型：专有网络VPC IP地址：公网IP ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2%E5%B9%B6%E4%BD%BF%E7%94%A8dockercentos-8/:1:0","tags":["CentOS"],"title":"部署并使用Docker（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2%E5%B9%B6%E4%BD%BF%E7%94%A8dockercentos-8/"},{"categories":["CentOS"],"content":"背景信息 本教程主要介绍以下内容： 部署Docker，详情请参见部署Docker。 使用Docker。 Docker的基本用法介绍，请参见使用Docker。 制作镜像的示例操作，请参见制作Docker镜像。 ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2%E5%B9%B6%E4%BD%BF%E7%94%A8dockercentos-8/:2:0","tags":["CentOS"],"title":"部署并使用Docker（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2%E5%B9%B6%E4%BD%BF%E7%94%A8dockercentos-8/"},{"categories":["CentOS"],"content":"部署Docker 本节主要介绍手动安装Docker的操作步骤，您也可以在云市场购买相应镜像，一键部署云服务器。 远程连接ECS实例。连接方式请参见连接方式概述。 运行以下命令，安装Docker存储驱动的依赖包。 dnf install -y device-mapper-persistent-data lvm2 运行以下命令，添加稳定的Docker软件源。 dnf config-manager --add-repo=https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo 运行以下命令，查看已添加的Docker软件源。 dnf list docker-ce 正确的返回示例如下。 docker-ce.x86_64 3:19.03.13-3.el7 docker-ce-stable 运行以下命令安装Docker。 dnf install -y docker-ce --nobest 运行以下命令启动Docker。 systemctl start docker ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2%E5%B9%B6%E4%BD%BF%E7%94%A8dockercentos-8/:3:0","tags":["CentOS"],"title":"部署并使用Docker（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2%E5%B9%B6%E4%BD%BF%E7%94%A8dockercentos-8/"},{"categories":["CentOS"],"content":"使用Docker Docker有以下基本用法： 管理Docker守护进程。 systemctl start docker #运行Docker守护进程 systemctl stop docker #停止Docker守护进程 systemctl restart docker #重启Docker守护进程 systemctl enable docker #设置Docker开机自启动 管理镜像。本文使用的是来自阿里云仓库的Apache镜像。 docker pull registry.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5 修改标签。由于阿里云仓库镜像的镜像名称较长，您可以修改镜像标签以便记忆区分。 docker tag registry.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5:latest aliweb:v1 查看已有镜像。 docker images 强制删除镜像。 docker rmi -f registry.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5 管理容器。 进入容器。e1abc****是执行 docker images 命令查询到的 ImageId ，使用 docker run 命令进入容器。 docker run -it e1abc**** /bin/bash 退出容器。使用exit命令退出当前容器。 run 命令加上 –d 参数可以在后台运行容器， --name 指定容器命名为apache。 docker run -d --name apache e1abc**** 进入后台运行的容器。 docker exec -it apache /bin/bash 查看容器ID。 docker ps 将容器做成镜像，命令的参数说明： docker commit \u003c容器ID或容器名\u003e [\u003c仓库名\u003e[:\u003c标签\u003e]] 。 docker commit containerID/containerName repository:tag 为了方便测试和恢复，将源镜像运行起来后，再做一个命名简单的镜像做测试。 docker commit 4c8066cd8**** apachephp:v1 运行容器并将宿主机的8080端口映射到容器里去。 docker run -d -p 8080:80 apachephp:v1 在浏览器输入ECS实例IP地址加8080端口访问测试，出现以下内容则说明运行成功。 说明 ECS实例的安全组入方向规则需要放行8080端口，详情请参见添加安全组规则。 ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2%E5%B9%B6%E4%BD%BF%E7%94%A8dockercentos-8/:4:0","tags":["CentOS"],"title":"部署并使用Docker（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2%E5%B9%B6%E4%BD%BF%E7%94%A8dockercentos-8/"},{"categories":["CentOS"],"content":"制作Docker镜像 准备Dockerfile内容。 新建并编辑Dockerfile文件。 vim Dockerfile 按i进入编辑模式，添加以下内容。 #声明基础镜像来源 FROM apachephp:v1 #声明镜像拥有者 MAINTAINER DTSTACK #RUN后面接容器运行前需要执行的命令，由于Dockerfile文件不能超过127行，因此当命令较多时建议写到脚本中执行 RUN mkdir /dtstact #开机启动命令，此处最后一个命令需要是可在前台持续执行的命令，否则容器后台运行时会因为命令执行完而退出。 ENTRYPOINT ping www.aliyun.com 按下键盘esc键，输入:wq并按下enter键，保存并退出Dockerfile文件。 构建镜像。 docker build -t webcentos8:v1 . # . 是Dockerfile文件的路径，不能忽略 docker images #查看是否创建成功 运行容器并查看。 docker run -d webcentos8:v1 #后台运行容器 docker ps #查看当前运行中的容器 docker ps -a #查看所有容器，包括未运行中的 docker logs CONTAINER ID/IMAGE #如未查看到刚才运行的容器，则用容器id或者名字查看启动日志排错 制作镜像。 docker commit fb2844b6**** dtstackweb:v1 #commit参数后添加容器ID和构建新镜像的名称和版本号。 docker images #列出本地（已下载的和本地创建的）镜像 将镜像推送至远程仓库。 默认推送到Docker Hub。您需要先登录Docker，为镜像绑定标签，将镜像命名为Docker用户名/镜像名:标签的格式。最终完成推送。 docker login --username=dtstack_plus registry.cn-shanghai.aliyuncs.com #执行后输入镜像仓库密码 docker tag [ImageId] registry.cn-shanghai.aliyuncs.com/dtstack123/test:[标签] docker push registry.cn-shanghai.aliyuncs.com/dtstack123/test:[标签] ","date":"2021-07-27","objectID":"/2021/07/%E9%83%A8%E7%BD%B2%E5%B9%B6%E4%BD%BF%E7%94%A8dockercentos-8/:5:0","tags":["CentOS"],"title":"部署并使用Docker（CentOS 8）","uri":"/2021/07/%E9%83%A8%E7%BD%B2%E5%B9%B6%E4%BD%BF%E7%94%A8dockercentos-8/"},{"categories":["Django"],"content":"Python坑 使用centos7安装python3，在安装 mysqlclient的时候报错 /bin/sh mysql_config not found 因为需要安装 mariadb-devel ，之后再报错 error: command 'gcc' failed with exit status 1 ，缺乏 gcc 。之后还是报错，因为 还是未安装 python36u-devel 所以正确的安装应该是装完 yum install -y python36u 之后再安装 yum install python36u-devel mariadb-devel yum install python36u python36u-devel yum install gcc mariadb-devel pip3 install mysqlclient ","date":"2021-05-27","objectID":"/2021/05/python%E5%9D%91/:0:0","tags":["Python"],"title":"Python坑","uri":"/2021/05/python%E5%9D%91/"},{"categories":null,"content":"  LoveIt 是一个由 Dillon 开发的简洁、优雅且高效的 Hugo 博客主题。 它的原型基于 LeaveIt 主题 和 KeepIt 主题。 Hugo 主题 LoveItHugo 主题 LoveIt \" Hugo 主题 LoveIt ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"特性 性能和 SEO  性能优化：在 Google PageSpeed Insights 中， 99/100 的移动设备得分和 100/100 的桌面设备得分  使用基于 JSON-LD 格式 的 SEO SCHEMA 文件进行 SEO 优化  支持 Google Analytics  支持 Fathom Analytics  支持搜索引擎的网站验证 (Google, Bind, Yandex and Baidu)  支持所有第三方库的 CDN  基于 lazysizes 自动转换图片为懒加载 外观和布局 / 响应式布局 / 浅色/深色 主题模式  全局一致的设计语言  支持分页  易用和自动展开的文章目录  支持多语言和国际化  美观的 CSS 动画 社交和评论系统  支持 Gravatar 头像  支持本地头像  支持多达 64 种社交链接  支持多达 28 种网站分享  支持 Disqus 评论系统  支持 Gitalk 评论系统  支持 Valine 评论系统  支持 Facebook 评论系统  支持 Telegram comments 评论系统  支持 Commento 评论系统  支持 Utterances 评论系统 扩展功能  支持基于 Lunr.js 或 algolia 的搜索  支持 Twemoji  支持代码高亮  一键复制代码到剪贴板  支持基于 lightgallery.js 的图片画廊  支持 Font Awesome 图标的扩展 Markdown 语法  支持上标注释的扩展 Markdown 语法  支持分数的扩展 Markdown 语法  支持基于 $ \\KaTeX $ 的数学公式  支持基于 mermaid 的图表 shortcode  支持基于 ECharts 的交互式数据可视化 shortcode  支持基于 Mapbox GL JS 的 Mapbox shortcode  支持基于 APlayer 和 MetingJS 的音乐播放器 shortcode  支持 Bilibili 视频 shortcode  支持多种注释的 shortcode  支持自定义样式的 shortcode  支持自定义脚本的 shortcode  支持基于 TypeIt 的打字动画 shortcode  支持基于 Smooth Scroll 的滚动动画  支持基于 cookieconsent 的 Cookie 许可横幅 … ","date":"2019-08-02","objectID":"/about/:0:1","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"许可协议 LoveIt 根据 MIT 许可协议授权。 更多信息请查看 LICENSE 文件。 LoveIt 主题中用到了以下项目，感谢它们的作者： normalize.css Font Awesome Simple Icons Animate.css Smooth Scroll autocomplete.js Lunr.js algoliasearch lazysizes object-fit-images Twemoji lightgallery.js clipboard.js Sharer.js TypeIt $ \\KaTeX $ mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine cookieconsent ","date":"2019-08-02","objectID":"/about/:0:2","tags":null,"title":"关于 LoveIt","uri":"/about/"}]